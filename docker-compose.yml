version: '3.7'

services:
  mailhog:
      image: mailhog/mailhog
      container_name: symfony_mailhog
      ports:
        - "8025:8025" # Interface web
      networks:
        - mon_album_photo_symfony_network

  # Service PHP avec FPM
  php:
    image: php:7.4-fpm
    build:
      context: .
      dockerfile: Dockerfile  # Assure-toi que le Dockerfile est bien référencé ici
    container_name: symfony_php
    volumes:
      - ./php.ini:/usr/local/etc/php/php.ini
      - .:/var/www/html
    networks:
      - mon_album_photo_symfony_network  # Utilisation du même réseau
    depends_on:
      - database
      - mailhog

  # Service Nginx
  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    volumes:
      - .:/var/www/html
      - ./nginx.conf:/etc/nginx/nginx.conf  # Assure-toi que le fichier nginx.conf est monté ici
    ports:
      - "8000:80"
    networks:
      - mon_album_photo_symfony_network  # Utilisation du même réseau
    depends_on:
      - php

  # Service MySQL
  database:
    image: mysql:8.0
    container_name: symfony_mysql
    environment:
      MYSQL_DATABASE: mon_album_photo
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - mon_album_photo_symfony_network  # Utilisation du même réseau

networks:
  mon_album_photo_symfony_network:  # Définition du réseau utilisé
    name: mon_album_photo_mon_album_photo_symfony_network
    driver: bridge  # Si tu veux un réseau interne entre les conteneurs, tu peux aussi utiliser "bridge"

volumes:
  db_data:
